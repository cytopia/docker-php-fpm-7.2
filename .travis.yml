###
### Enable sudo (required for docker service)
###
sudo: required


###
### Language
###
language: python


###
### Add services
###
services:
  - docker


###
### Build Matrix definition
###
env:
  global:
    - IMAGE: devilbox/php-fpm-7.2
    # travis encrypt DOCKER_USERNAME=user
    # travis encrypt DOCKER_PASSWORD=pass
    # Must be regenerated when repository name/owner changes
    # DOCKER_USERNAME
    - secure: "lc3EBVKUULA4CMjh1qytAg5ljHFhid5r0C1wz+99dXGcuf9sM5dQMydSVVrRSCMmqhhVKWFK1au3FcG0syARL2GwgiVpOLHoZCLqQi8KsQM51xNeifheremtcER0C2Wug4imr4e2MmaT3ejpQGp+r1zey/ETA4Xglh72eES09BgD0dAd6ZdcdNXZBAYXhitP4GM5bsW33+HPr8K6fZQh2HBk8tVI8CIgTy18+mIo7+zy4WYlSu+VHbBmYoLk32TyiJB+Iz91bPrb8/Shzp5Bk69bsn/LMCdmgsJqw3LjlwmYJJecXaWnQ/rVZJ78nzQorJjaq2MXtqsIUeTvF5PtPodYc2IVGQQsjaygMNrJUXCTZY+kBP/UD5edfiNW965P6pPoKYd51nJ+f8l+yAdmQ4jMfFiyTJsy7R1SjI6N14XOXmFyOxZ3ehuZvWQ/dzpByumz4wW127saipOZVVN/ZaY+kIteN/iY8MOxCq2XPuQPCfACk3a7RgjkzRxK2j2XK1g5ci4+323ijyUYUd5hR630ud4fQ3PH9WNy1oBD7vhdr1cEJYg4YGItNWe5nQUWu+/H/x/LbrBPA9C6shCuyFanu9XPO6YUc4QJNVB+jB23A3rn3p+8ycAgCVcQWiaxeY32gJRjK6OxCAUIuaTKMo5WpXO5m3EeJ/C6Z+UTuQc="
    # DOCKER_PASSWORD
    - secure: "ewUIubXgDRXp7Iw5D+ztSPu/t0NvS1GneRfwQcG6Z98KdPtmZUCqkLWZIJfY2zVNtXwnrZF0OFWQV0G709Tv1davmTmwHJc2QZBqDEidPHEx5vHxNqDYud2LrK2i4Oki4dIC6+zTlC4CsMhdxDU56V6SuX3plP6E7et+bW/jkCAactasJudmJuMcl1Z4RJcX7FDY/Oyw5NDfZgO2Uy3PxXuHz7LpWQ133oanQo8iRsdAQ6PrQectKFrSBiOijgqi3CDrE+qEFiPW7SFv8dRxIirepbCuNUxNv0xb3wt+nIBG/rF1x2nkODvEhqzITTNunY8D9aqq7ZbtUlMOAnpvbUzjZlmrv+OIyqeaonQxxVB24JlmBuaZ99+Ho/MFEyPwpZiUVJbG2pGvzmW/Y8/ghDMkSECs9Rri0D7OGZ1s+DdJvvagUjzzJ0QK6qORme5XO/qo7lY3ykq7XvFwoaRi+LOvkg/Uq4TkzzdxC6j7MISnpzPqQIC3mCyGzlYgRGHzR9EvgGBaLabq/lzeMtM7YPM+KwZztkPnhiyMbP9A58RGrL2j1qQTP5gGHlnvi32uAA/fYXGti4UBEEZTCz2o0q15iEde0ygvUydJrx4v4k6/0TX5Hki0pHFtq93isE3rQKqW8chf6nicL/7LA1QA87S3Zd2wu4DAPXDwxYVI9SA="

  matrix:
    - FLAVOUR=alpine TYPE=base
    - FLAVOUR=alpine TYPE=mods
    - FLAVOUR=alpine TYPE=prod
    - FLAVOUR=alpine TYPE=work
    - FLAVOUR=debian TYPE=base
    - FLAVOUR=debian TYPE=mods
    - FLAVOUR=debian TYPE=prod
    - FLAVOUR=debian TYPE=work


###
### Stage definitions
###
stages:
  - test
  - deploy


###
### Global for all stages
###
install:
  # Get newer docker version
  - max=100; i=0; while [ $i -lt $max ]; do if sudo apt-get update; then break; else i=$((i+1)); fi done
  - max=100; i=0; while [ $i -lt $max ]; do if sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce; then break; else i=$((i+1)); fi done
  - docker version
script:
  - .ci/start-ci.sh "${IMAGE}" "${FLAVOUR}" "${TYPE}"


###
### Job definitions
###
jobs:
  include:
    - stage: deploy
      env:
        - FLAVOUR=debian TYPE=
      before_script:
        - if [ "${TRAVIS_PULL_REQUEST}" == "false" ]; then
            if [ -n "${TRAVIS_TAG}" ] || [ "${TRAVIS_BRANCH}" == "master" ] || [[ ${TRAVIS_BRANCH} =~ ^(release-[.0-9]+)$ ]]; then
              max=100; i=0; while [ $i -lt $max ]; do if
                docker build -t "${IMAGE}:base-${FLAVOUR}" -f base/Dockerfile.${FLAVOUR} base/ &&
                docker build -t "${IMAGE}:mods-${FLAVOUR}" -f mods/Dockerfile.${FLAVOUR} mods/ &&
                docker build -t "${IMAGE}:prod-${FLAVOUR}" -f prod/Dockerfile.${FLAVOUR} prod/ &&
                docker build -t "${IMAGE}:work-${FLAVOUR}" -f work/Dockerfile.${FLAVOUR} work/ &&
                docker images; then break; else i=$((i+1)); fi
              done;
              if [ $i -gt 98 ]; then false; fi
            else
              echo "Skipping branch ${TRAVIS_BRANCH}";
            fi
          fi
      script:
        # Push to docker hub on success
        - if [ "${TRAVIS_PULL_REQUEST}" == "false" ]; then
            if [ -n "${TRAVIS_TAG}" ]; then
              max=100; i=0; while [ $i -lt $max ]; do if
                docker tag "${IMAGE}:base-${FLAVOUR}" "${IMAGE}:base-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker tag "${IMAGE}:mods-${FLAVOUR}" "${IMAGE}:mods-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker tag "${IMAGE}:prod-${FLAVOUR}" "${IMAGE}:prod-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker tag "${IMAGE}:work-${FLAVOUR}" "${IMAGE}:work-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker login --username "$DOCKER_USERNAME" --password "$DOCKER_PASSWORD" &&
                docker push "${IMAGE}:work-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker push "${IMAGE}:prod-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker push "${IMAGE}:mods-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker push "${IMAGE}:base-${FLAVOUR}-${TRAVIS_TAG}"; then break; else i=$((i+1)); fi
              done;
              if [ $i -gt 98 ]; then false; fi
            elif [ "${TRAVIS_BRANCH}" == "master" ]; then
              max=100; i=0; while [ $i -lt $max ]; do if
                docker login --username "$DOCKER_USERNAME" --password "$DOCKER_PASSWORD" &&
                docker push "${IMAGE}:work-${FLAVOUR}" &&
                docker push "${IMAGE}:prod-${FLAVOUR}" &&
                docker push "${IMAGE}:mods-${FLAVOUR}" &&
                docker push "${IMAGE}:base-${FLAVOUR}"; then break; else i=$((i+1)); fi
              done;
              if [ $i -gt 98 ]; then false; fi
            elif [[ ${TRAVIS_BRANCH} =~ ^(release-[.0-9]+)$ ]]; then
              max=100; i=0; while [ $i -lt $max ]; do if
                docker tag "${IMAGE}:base-${FLAVOUR}" "${IMAGE}:base-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker tag "${IMAGE}:mods-${FLAVOUR}" "${IMAGE}:mods-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker tag "${IMAGE}:prod-${FLAVOUR}" "${IMAGE}:prod-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker tag "${IMAGE}:work-${FLAVOUR}" "${IMAGE}:work-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker login --username "$DOCKER_USERNAME" --password "$DOCKER_PASSWORD" &&
                docker push "${IMAGE}:work-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker push "${IMAGE}:prod-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker push "${IMAGE}:mods-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker push "${IMAGE}:base-${FLAVOUR}-${TRAVIS_BRANCH}"; then break; else i=$((i+1)); fi
              done;
              if [ $i -gt 98 ]; then false; fi
            else
              echo "Skipping branch ${TRAVIS_BRANCH}";
            fi
          fi
    - stage: deploy
      env:
        - FLAVOUR=alpine TYPE=
      before_script:
        - if [ "${TRAVIS_PULL_REQUEST}" == "false" ]; then
            if [ -n "${TRAVIS_TAG}" ] || [ "${TRAVIS_BRANCH}" == "master" ] || [[ ${TRAVIS_BRANCH} =~ ^(release-[.0-9]+)$ ]]; then
              max=100; i=0; while [ $i -lt $max ]; do if
                docker build -t "${IMAGE}:base-${FLAVOUR}" -f base/Dockerfile.${FLAVOUR} base/ &&
                docker build -t "${IMAGE}:mods-${FLAVOUR}" -f mods/Dockerfile.${FLAVOUR} mods/ &&
                docker build -t "${IMAGE}:prod-${FLAVOUR}" -f prod/Dockerfile.${FLAVOUR} prod/ &&
                docker build -t "${IMAGE}:work-${FLAVOUR}" -f work/Dockerfile.${FLAVOUR} work/ &&
                docker images; then break; else i=$((i+1)); fi
              done;
              if [ $i -gt 98 ]; then false; fi
            else
              echo "Skipping branch ${TRAVIS_BRANCH}";
            fi
          fi
      script:
        # Push to docker hub on success
        - if [ "${TRAVIS_PULL_REQUEST}" == "false" ]; then
            if [ -n "${TRAVIS_TAG}" ]; then
              max=100; i=0; while [ $i -lt $max ]; do if
                docker tag "${IMAGE}:base-${FLAVOUR}" "${IMAGE}:base-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker tag "${IMAGE}:mods-${FLAVOUR}" "${IMAGE}:mods-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker tag "${IMAGE}:prod-${FLAVOUR}" "${IMAGE}:prod-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker tag "${IMAGE}:work-${FLAVOUR}" "${IMAGE}:work-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker login --username "$DOCKER_USERNAME" --password "$DOCKER_PASSWORD" &&
                docker push "${IMAGE}:work-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker push "${IMAGE}:prod-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker push "${IMAGE}:mods-${FLAVOUR}-${TRAVIS_TAG}" &&
                docker push "${IMAGE}:base-${FLAVOUR}-${TRAVIS_TAG}"; then break; else i=$((i+1)); fi
              done;
              if [ $i -gt 98 ]; then false; fi
            elif [ "${TRAVIS_BRANCH}" == "master" ]; then
              max=100; i=0; while [ $i -lt $max ]; do if
                docker login --username "$DOCKER_USERNAME" --password "$DOCKER_PASSWORD" &&
                docker push "${IMAGE}:work-${FLAVOUR}" &&
                docker push "${IMAGE}:prod-${FLAVOUR}" &&
                docker push "${IMAGE}:mods-${FLAVOUR}" &&
                docker push "${IMAGE}:base-${FLAVOUR}"; then break; else i=$((i+1)); fi
              done;
              if [ $i -gt 98 ]; then false; fi
            elif [[ ${TRAVIS_BRANCH} =~ ^(release-[.0-9]+)$ ]]; then
              max=100; i=0; while [ $i -lt $max ]; do if
                docker tag "${IMAGE}:base-${FLAVOUR}" "${IMAGE}:base-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker tag "${IMAGE}:mods-${FLAVOUR}" "${IMAGE}:mods-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker tag "${IMAGE}:prod-${FLAVOUR}" "${IMAGE}:prod-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker tag "${IMAGE}:work-${FLAVOUR}" "${IMAGE}:work-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker login --username "$DOCKER_USERNAME" --password "$DOCKER_PASSWORD" &&
                docker push "${IMAGE}:work-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker push "${IMAGE}:prod-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker push "${IMAGE}:mods-${FLAVOUR}-${TRAVIS_BRANCH}" &&
                docker push "${IMAGE}:base-${FLAVOUR}-${TRAVIS_BRANCH}"; then break; else i=$((i+1)); fi
              done;
              if [ $i -gt 98 ]; then false; fi
            else
              echo "Skipping branch ${TRAVIS_BRANCH}";
            fi
          fi
