###
### Enable sudo (required for docker service)
###
sudo: required


###
### Language
###
language: python


###
### Add services
###
services:
  - docker


###
### Build Matrix definition
###
env:
  global:
    - IMAGE: devilbox/php-fpm-7.2
    # travis encrypt DOCKER_USERNAME=user
    # travis encrypt DOCKER_PASSWORD=pass
    # Must be regenerated when repository name/owner changes
    # DOCKER_USERNAME
    - secure: "Xtbnzh099y/rUvdsE58SZaK2ELqgiWKOMYR5e9+KaMtIrsG9rFRG+MCwUCDenKhOzUDV0V1wYPf7AaZjwy08Y/Bl247tvYxuTwjx4iUiKacKc3XwehmwLmHbG/uV2D+gSyVsgIyESjJ6ln9VUC5iYJlYfcID3M3FRwbyuyjMJGWl+jqW5/6EsvPTY4VGd1a8wzJ7fBF2vNgEmTZIylnYT2QxWc4l7tohq4+Xkk/0Jcb+5LSQ+WNB3yI9gPcU2lakuQ4rYkZT9FN1Sy/D7APzkVhus2eXrjbskN5Rlt7GMoTkF4skJUNW9ChQ15DgWx0UeXQBtOCNuHLmR+BGG2kgwW5XCg5AFMqvuTzDnPckXCc4Mhp4cRxjnsN7SBkxlnc8wmvhbaWNptPfxnetd3N8zx8XKTp3Q054jT1sOW/yBLzUzPXW3ZI61o0SW6/fRkFoPKS+ofeU2oaLg1O2AkYWEdCyXqwNP/QrMWOEt5pvd434EKS6KDz3oldSqdH3FX7t/orNyCWiNpjX3iR7Zgq4jB+ORKtStMk0vDAunsjgay22djwmIY6lfBt6I6KNX5DZUUWqwbr6e4E4RDSda4dzrC24y+pDsUop9gRQSE3SEz3bgNb/V2N57J2AZigmA/Lh11zoK38mP4P4iqMIvG3S30Hvc0eCgoY1wmrW7+3rFSY="
    # DOCKER_PASSWORD
    - secure: "hCusQXFgiJAzyGQ4mq0GRBw7OYQCtuKdqKIZO3wW83VLzCsgZYWdlqLLDgFsxGTAxJBUUSyXc0FLunquY5UOX43IIj/oTTXMxxyDHtMZH1LmHpDAXTMZRR2zHVgqkOiBYxqvZLePBobU75nE97d/AkykIBLvUYNRj6qOBV1cV2a4OS2nAzYQsC+qX8POWje57WgxiQyjOqHPit68XXi72ykUUIfE7jVJQuMEzBUb8Knx8h0gbzJRNIBaxz05WbAqZl277ec3xKAYQkQEAN4Hyd/j62iZDmwwQyG7WkQYLukYEDCpKxVlrmhjw/3MkA4b5niOCh0iH+mgy06F1Vid+LDYQY+Cr6tmXj+m8JEY/xEa4wapMMz1NG/paOm6kOMer4KRVSd/X/JE/mrzE4XpGlhNIr5VskhGATnn4umqSxYdPBySfYPcsqlVACGVw2D2rGZyjBcJeHYWup5J408xqud32THX9eRCrEBKX44aasJUJ4jkbXPWbwRpGX8uGt2DJRyH4xT7+6XeEJVjXWl1POVD7YcxIvzV9fXPnPQ+9sxRtR08qNf7Zd+/GHR762ROl7kU/GA1K5vBCngGiBrY9BIlfL1fUtvdzShSa+/dnX2dsXoWb1MiOKR0hZJmnNeY1sdMzpeu4gMSZi9J2djh5+WpWe3KU242MFrzV+jkYRE="

  matrix:
    - FLAVOUR=alpine TYPE=base
    - FLAVOUR=alpine TYPE=mods
    - FLAVOUR=alpine TYPE=prod
    - FLAVOUR=alpine TYPE=work
    - FLAVOUR=debian TYPE=base
    - FLAVOUR=debian TYPE=mods
    - FLAVOUR=debian TYPE=prod
    - FLAVOUR=debian TYPE=work


###
### Stage definitions
###
stages:
  - test
  - deploy


###
### Global for all stages
###
install:
  # Get newer docker version
  - max=100; i=0; while [ $i -lt $max ]; do if sudo apt-get update; then break; else i=$((i+1)); fi done
  - max=100; i=0; while [ $i -lt $max ]; do if sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce; then break; else i=$((i+1)); fi done
  - docker version
script:
  - .ci/start-ci.sh "${IMAGE}" "${FLAVOUR}" "${TYPE}"


###
### Job definitions
###
jobs:
  include:
    # Final deploy stage
    - stage: deploy
      env:
        - FLAVOUR=
        - TYPE=
      before_script:
        - if [ "${TRAVIS_PULL_REQUEST}" == "false" ]; then
            if [ -n "${TRAVIS_TAG}" ]; then
              max=100; i=0; while [ $i -lt $max ]; do if
                docker build -t "${IMAGE}:base-alpine-${TRAVIS_TAG}" -f base/Dockerfile.alpine base/ &&
                docker build -t "${IMAGE}:mods-alpine-${TRAVIS_TAG}" -f mods/Dockerfile.alpine mods/ &&
                docker build -t "${IMAGE}:prod-alpine-${TRAVIS_TAG}" -f prod/Dockerfile.alpine prod/ &&
                docker build -t "${IMAGE}:work-alpine-${TRAVIS_TAG}" -f work/Dockerfile.alpine work/ &&
                docker build -t "${IMAGE}:base-debian-${TRAVIS_TAG}" -f base/Dockerfile.debian base/ &&
                docker build -t "${IMAGE}:mods-debian-${TRAVIS_TAG}" -f mods/Dockerfile.debian mods/ &&
                docker build -t "${IMAGE}:prod-debian-${TRAVIS_TAG}" -f prod/Dockerfile.debian prod/ &&
                docker build -t "${IMAGE}:work-debian-${TRAVIS_TAG}" -f work/Dockerfile.debian work/ &&
                docker images; then break; else i=$((i+1)); fi
              done;
              if [ $i -gt 98 ]; then false; fi
            elif [ "${TRAVIS_BRANCH}" == "master" ]; then
              max=100; i=0; while [ $i -lt $max ]; do if
                docker build -t "${IMAGE}:base-alpine" -f base/Dockerfile.alpine base/ &&
                docker build -t "${IMAGE}:mods-alpine" -f mods/Dockerfile.alpine mods/ &&
                docker build -t "${IMAGE}:prod-alpine" -f prod/Dockerfile.alpine prod/ &&
                docker build -t "${IMAGE}:work-alpine" -f work/Dockerfile.alpine work/ &&
                docker build -t "${IMAGE}:base-debian" -f base/Dockerfile.debian base/ &&
                docker build -t "${IMAGE}:mods-debian" -f mods/Dockerfile.debian mods/ &&
                docker build -t "${IMAGE}:prod-debian" -f prod/Dockerfile.debian prod/ &&
                docker build -t "${IMAGE}:work-debian" -f work/Dockerfile.debian work/ &&
                docker images; then break; else i=$((i+1)); fi
              done;
              if [ $i -gt 98 ]; then false; fi
            elif [[ ${TRAVIS_BRANCH} =~ ^(release-[.0-9]+)$ ]]; then
              max=100; i=0; while [ $i -lt $max ]; do if
                docker build -t "${IMAGE}:base-alpine-${TRAVIS_BRANCH}" -f base/Dockerfile.alpine base/ &&
                docker build -t "${IMAGE}:mods-alpine-${TRAVIS_BRANCH}" -f mods/Dockerfile.alpine mods/ &&
                docker build -t "${IMAGE}:prod-alpine-${TRAVIS_BRANCH}" -f prod/Dockerfile.alpine prod/ &&
                docker build -t "${IMAGE}:work-alpine-${TRAVIS_BRANCH}" -f work/Dockerfile.alpine work/ &&
                docker build -t "${IMAGE}:base-debian-${TRAVIS_BRANCH}" -f base/Dockerfile.debian base/ &&
                docker build -t "${IMAGE}:mods-debian-${TRAVIS_BRANCH}" -f mods/Dockerfile.debian mods/ &&
                docker build -t "${IMAGE}:prod-debian-${TRAVIS_BRANCH}" -f prod/Dockerfile.debian prod/ &&
                docker build -t "${IMAGE}:work-debian-${TRAVIS_BRANCH}" -f work/Dockerfile.debian work/ &&
                docker images; then break; else i=$((i+1)); fi
              done;
              if [ $i -gt 98 ]; then false; fi
            else
              echo "Skipping branch ${TRAVIS_BRANCH}";
            fi
          fi
      script:
        # Push to docker hub on success
        - if [ "${TRAVIS_PULL_REQUEST}" == "false" ]; then
            if [ -n "${TRAVIS_TAG}" ]; then
              max=100; i=0; while [ $i -lt $max ]; do if
                docker login --username "$DOCKER_USERNAME" --password "$DOCKER_PASSWORD" &&
                docker push "${IMAGE}:work-debian-${TRAVIS_TAG}" &&
                docker push "${IMAGE}:prod-debian-${TRAVIS_TAG}" &&
                docker push "${IMAGE}:mods-debian-${TRAVIS_TAG}" &&
                docker push "${IMAGE}:base-debian-${TRAVIS_TAG}" &&
                docker push "${IMAGE}:work-alpine-${TRAVIS_TAG}" &&
                docker push "${IMAGE}:prod-alpine-${TRAVIS_TAG}" &&
                docker push "${IMAGE}:mods-alpine-${TRAVIS_TAG}" &&
                docker push "${IMAGE}:base-alpine-${TRAVIS_TAG}"; then break; else i=$((i+1)); fi
              done;
              if [ $i -gt 98 ]; then false; fi
            elif [ "${TRAVIS_BRANCH}" == "master" ]; then
              max=100; i=0; while [ $i -lt $max ]; do if
                docker login --username "$DOCKER_USERNAME" --password "$DOCKER_PASSWORD" &&
                docker push "${IMAGE}:work-debian" &&
                docker push "${IMAGE}:prod-debian" &&
                docker push "${IMAGE}:mods-debian" &&
                docker push "${IMAGE}:base-debian" &&
                docker push "${IMAGE}:work-alpine" &&
                docker push "${IMAGE}:prod-alpine" &&
                docker push "${IMAGE}:mods-alpine" &&
                docker push "${IMAGE}:base-alpine"; then break; else i=$((i+1)); fi
              done;
              if [ $i -gt 98 ]; then false; fi
            elif [[ ${TRAVIS_BRANCH} =~ ^(release-[.0-9]+)$ ]]; then
              max=100; i=0; while [ $i -lt $max ]; do if
                docker login --username "$DOCKER_USERNAME" --password "$DOCKER_PASSWORD" &&
                docker push "${IMAGE}:work-debian-${TRAVIS_BRANCH}" &&
                docker push "${IMAGE}:prod-debian-${TRAVIS_BRANCH}" &&
                docker push "${IMAGE}:mods-debian-${TRAVIS_BRANCH}" &&
                docker push "${IMAGE}:base-debian-${TRAVIS_BRANCH}" &&
                docker push "${IMAGE}:work-alpine-${TRAVIS_BRANCH}" &&
                docker push "${IMAGE}:prod-alpine-${TRAVIS_BRANCH}" &&
                docker push "${IMAGE}:mods-alpine-${TRAVIS_BRANCH}" &&
                docker push "${IMAGE}:base-alpine-${TRAVIS_BRANCH}"; then break; else i=$((i+1)); fi
              done;
              if [ $i -gt 98 ]; then false; fi
            else
              echo "Skipping branch ${TRAVIS_BRANCH}";
            fi
          fi
